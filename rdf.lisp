(in-package semantrix)

(setq dc-namespace "dc")

(setq dc-abstract "http://purl.org/dc/terms/abstract")
(setq dc-contributor "http://purl.org/dc/terms/contributor")
(setq dc-creator "http://purl.org/dc/terms/creator")
(setq dc-date "http://purl.org/dc/terms/date")
(setq dc-dateaccepted "http://purl.org/dc/terms/dateAccepted")
(setq dc-datecopyrighted "http://purl.org/dc/terms/dateCopyrighted")
(setq dc-datesubmitted "http://purl.org/dc/terms/dateSubmitted")
(setq dc-description "http://purl.org/dc/terms/description")
(setq dc-format "http://purl.org/dc/terms/format")
(setq dc-identifier "http://purl.org/dc/terms/identifier")
(setq dc-language "http://purl.org/dc/terms/language")
(setq dc-requires "http://purl.org/dc/terms/requires")
(setq dc-references "http://purl.org/dc/terms/references")
(setq dc-rights "http://purl.org/dc/terms/rights")
(setq dc-rightsholder "http://purl.org/dc/terms/rightsHolder")
(setq dc-subject "http://purl.org/dc/terms/subject")
(setq dc-title "http://purl.org/dc/terms/title")
(setq dc-type "http://purl.org/dc/terms/type")
(setq dc-valid "http://purl.org/dc/terms/valid")
(setq epub-namespace "epub")

(defstruct (person
  	(:constructor make-person)
  	(:constructor person)
  )
	(additional-name "" :type string)
	(address "" :type string)
	(email "" :type string)
	(family-name "" :type string)
	(gender "" :type string)
	(github "" :type string)
	(given-name "" :type string)
	(nationality nil :type list)
	(personal-web "" :type string)
	(professional-web "" :type string)
	(telephone "" :type string)
)

(defstruct (dc
		(:constructor make-dc)
		(:constructor description)
	)
	(creator (make-person :given-name "John" :family-name "Doe") :type person)
	(date "" :type string)
	(summary "" :type string)
	(format "" :type string)
	(identifier "" :type string)
	(keywords "" :type string)
	(language "" :type string)
	(publisher "" :type string)
	(relation '() :type list)
	(rights "" :type string)
	(source "" :type string)
	(subject "" :type string)
	(title "" :type string)
	(type "" :type string)
	; OPF additions
	; (illustrator "" :type string)
	; (editor "" :type string)
)

(defun serialize (uri desc out-file)
	(with-open-stream (out-stream (open out-file :direction :output :if-exists :supersede))
		(mapcar (lambda (triple) (write-line triple out-stream))
			(list
				(make-triple uri dc-title (article-description-title desc))
				(make-triple uri dc-creator (article-description-creator desc))
				(make-triple uri dc-date (article-description-date desc))
				(make-triple uri dc-subject (article-description-subject desc))
				(make-triple uri dc-description (article-description-description desc))
				(make-triple uri dc-identifier uri)
			)
		)
	)
)
